{
//Here you can associate an alias to any sensor. Additionally, you can associate two already declared sensors to be merged into one. (see "ram_tot")
"sensors":
	[
	{ "alias": "cpu_load",      "identifier": "/amdcpu/0/load/0" },
	{ "alias": "cpu_temp",      "identifier": "/amdcpu/0/temperature/3" },
	{ "alias": "cpu_fan",       "identifier": "/lpc/it8688e/fan/0" },
	{ "alias": "ram_load",      "identifier": "/ram/load/0" },
	{ "alias": "ram_used",      "identifier": "/ram/data/0" },
	{ "alias": "ram_free",      "identifier": "/ram/data/1" },
	{ "alias": "ram_tot",       "merge": [{ "alias": "ram_used"}, {"alias": "ram_free"}],
	{ "alias": "cpu_core_1",    "identifier": "/amdcpu/0/load/1" },
	{ "alias": "cpu_core_2",    "identifier": "/amdcpu/0/load/2" },
	{ "alias": "cpu_core_3",    "identifier": "/amdcpu/0/load/3" },
	{ "alias": "cpu_core_4",    "identifier": "/amdcpu/0/load/4" },
	{ "alias": "cpu_core_5",    "identifier": "/amdcpu/0/load/5" },
	{ "alias": "cpu_core_6",    "identifier": "/amdcpu/0/load/6" },
	{ "alias": "cpu_core_7",    "identifier": "/amdcpu/0/load/7" },
	{ "alias": "cpu_core_8",    "identifier": "/amdcpu/0/load/8" },
	{ "alias": "cpu_core_9",    "identifier": "/amdcpu/0/load/9" },
	{ "alias": "cpu_core_10",   "identifier": "/amdcpu/0/load/10" },
	{ "alias": "cpu_core_11",   "identifier": "/amdcpu/0/load/11" },
	{ "alias": "cpu_core_12",   "identifier": "/amdcpu/0/load/12" },
	{ "alias": "cpu_core_13",   "identifier": "/amdcpu/0/load/13" },
	{ "alias": "cpu_core_14",   "identifier": "/amdcpu/0/load/14" },
	{ "alias": "cpu_core_15",   "identifier": "/amdcpu/0/load/15" },
	{ "alias": "cpu_core_16",   "identifier": "/amdcpu/0/load/16" },
	{ "alias": "gpu_load",      "identifier": "/gpu-nvidia/0/load/0" },
	{ "alias": "gpu_temp",      "identifier": "/gpu-nvidia/0/temperature/0" },
	{ "alias": "gpu_fan",       "identifier": "/gpu-nvidia/0/control/0" },
	{ "alias": "gpu_vram_load", "identifier": "/gpu-nvidia/0/load/3" },
	{ "alias": "gpu_vram_used", "identifier": "/gpu-nvidia/0/smalldata/2" },
	{ "alias": "gpu_vram_tot",  "identifier": "/gpu-nvidia/0/smalldata/3" }
	],
	
//Here you can associate an alias to some text (right) or the identifier of a piece of hardware or a sensor. It will be automatically replaced by its name.
"strings":
	[
	{ "alias": "cpu_name",      "identifier": "/amdcpu/0" },
	{ "alias": "gpu_name",      "identifier": "/gpu-nvidia/0" },
	{ "alias": "temp",          "string": "Temperature: " },
	],

//Here you can associate a name to an rgba color. Alpha for the window background will be supported on Windows.
"colors":
	[
	//The first three have a special meaning and are already defined as follows. Un-comment one if you plan redefining it changing its values.
	// "default" is applied anywhere a color is accepted but not given.
	//{ "alias": "default",    "r": 200, "g": 200, "b": 200, "a": 255 }, 
	// "window" affects the background color of the window.
	//{ "alias": "window",     "r":   0, "g":   0, "b":   0, "a": 255 },
	// "graphicsbg" affects the background color of visual representations of data (plots, lines)
	//{ "alias": "graphicsbg", "r":  32, "g":  32, "b":  32, "a": 255 },
	{ "alias": load,         "r":   0, "g": 255, "b":   0, "a": 255 },
	{ "alias": temperature,  "r": 255, "g":   0, "b":   0, "a": 255 },
    { "alias": smallload,    "r":   0, "g": 200, "b": 180, "a": 100 },
    { "alias": fan,          "r": 100, "g": 100, "b": 250, "a": 255 },
    { "alias": ram,          "r": 255, "g": 255, "b":   0, "a": 255 }
	]

// Time to build the UI. 
// window        - Starts a new window. Optional arguments are width and height. Can only have one children.
// horizontal    - Starts a group that sorts its children horizontally. Optional argument is the vertical alignment.
// vertical      - Starts a group that sorts its children horizontally. Optional argument is the horizontal alignment.
// size_wrapper  - Wraps a single children. You can define max_width, min_width, max_height, min_height, valign (vertical alignment) and halign (horizontal alignment)
// plot          - Defines a plot, its children must be lines.
// line          - A line to be drawn in a plot. Arguments are a sensor and a color.
// reading       - Text that updates with readings from sensors. Arguments are a string to put in front, a sensor for the value. (STRING: SENSOR)
//                 With 2 sensors you get a value on total kind of reading (STRING: SENSOR1/SENSOR)
//                 With 3 sensors you get a value followed by a value on total (STRING: SENSOR1 SENSOR2/SENSOR3)

"ui":
	[
	{ "type": "window",
	"size": [300, 200],
	"position": [10, 10],
	"child":
		{ "type": "vertical", "children": 
			[
				{ "type": "text", "text": {"alias": "cpu_name"}},
				{ "type": "horizontal", "children":
					[
						{ "type": "vertical", "children":
							[
							{ "type": "textval", "text": {"string": "Usage: "}, "sensor": {"alias": "cpu_load"}},
							{ "type": "textval", "text": {"alias":  "temp"},    "sensor": {"alias": "cpu_temp"}}
							]
						},
						{ "type": "vertical", "children":
							[
							{ "type": "textval", "text": {"string": "Fan: "}, "sensor": {"alias": "cpu_fan"}},
							{ "type": "textval", "text": {"alias":  "RAM"},   "sensors": [{"alias": "ram_load"}, {"alias": "ram_used"}, {"alias": "ram_tot"}]}
							]
						},
					]
				},
				{ "type": "horizontal", "children":
					[
						{ "type": "vertical", "children":
							[
							{ "type": "textval", "text": {"string": "Usage: "}, "sensor": {"alias": "cpu_load"}},
							{ "type": "textval", "text": {"alias":  "temp"},    "sensor": {"alias": "cpu_temp"}}
							]
						},
						{ "type": "vertical", "children":
							[
							{ "type": "textval", "text": {"string": "Fan: "}, "sensor": {"alias": "cpu_fan"}},
							{ "type": "textval", "text": {"alias":  "RAM"},   "sensors": [{"alias": "ram_load"}, {"alias": "ram_used"}, {"alias": "ram_tot"}]}
							]
						},
					]
				},
			
			
			]
		}
	
	}
	
	
	
	]
}